version: '3.9'
services:

  postgres:
    image: postgres
    restart: always
    environment:
      POSTGRES_USER: 'postgres'
      POSTGRES_PASSWORD: 'postgres'
      POSTGRES_DB: 'details'
    ports:
      - 5431:5432
    volumes:
     - pg-data:/var/lib/postgresql/data

  kafdrop:
    image: obsidiandynamics/kafdrop
    restart: "no"
    ports:
      - "9090:9000"
    environment:
      KAFKA_BROKERCONNECT: "kafka:29092"
      JVM_OPTS: "-Xms16M -Xmx48M -Xss180K -XX:-TieredCompilation -XX:+UseStringDeduplication -noverify"
    depends_on:
      - "kafka"

  kafka:
    image: obsidiandynamics/kafka
    restart: "no"
    ports:
      - "2181:2181"
      - "9092:9092"
    environment:
      KAFKA_LISTENERS: "INTERNAL://:29092,EXTERNAL://:9092"
      KAFKA_ADVERTISED_LISTENERS: "INTERNAL://kafka:29092,EXTERNAL://localhost:9092"
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: "INTERNAL:PLAINTEXT,EXTERNAL:PLAINTEXT"
      KAFKA_INTER_BROKER_LISTENER_NAME: "INTERNAL"
      KAFKA_ZOOKEEPER_SESSION_TIMEOUT: "6000"
      KAFKA_RESTART_ATTEMPTS: "10"
      KAFKA_RESTART_DELAY: "5"
      ZOOKEEPER_AUTOPURGE_PURGE_INTERVAL: "0"
      
  api-geteway:
    build:
     context: api-gateway
    ports:
      - "80:80"
    environment:
      "env": "prod"
    depends_on:
      - postgres
    networks:
      - default
    deploy:
      replicas: 1
      resources:
        limits:
          memory: 1024M
        reservations:
          memory: 200M

  storage:
    build:
     context: storage
    environment:
      "env": "prod"
    depends_on:
      - postgres
    networks:
      - default
    deploy:
      replicas: 3
      resources:
        limits:
          memory: 1024M
        reservations:
          memory: 200M

  verefication:
    build:
     context: verefication
    environment:
      "env": "prod"
    depends_on:
      - postgres
    networks:
      - default
    deploy:
      replicas: 3
      resources:
        limits:
          memory: 1024M
        reservations:
          memory: 200M
  
  processing:
    build:
     context: processing
    environment:
      "env": "prod"
    depends_on:
      - postgres
    networks:
      - default
    deploy:
      replicas: 3
      resources:
        limits:
          memory: 1024M
        reservations:
          memory: 200M

  clickhouse:
    image: yandex/clickhouse-server
    ports:
      - 8123:8123
      - 9000:9000
    volumes:
      - clickhousedb:/var/lib/clickhouse

volumes:
  pg-data:
  clickhousedb: